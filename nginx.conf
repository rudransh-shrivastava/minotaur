events {
    worker_connections 1024;
}

http {
    upstream backend {
        # Algorithm for load balancing
        least_conn;

        server test-server-1:8081;
        server test-server-2:8082;
        server test-server-3:8083;

        # Enable keepalive connections
        keepalive 32;
    }

    # Enable response caching
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
        listen 80;

        location / {
            # Basic proxy settings
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Caching settings
            proxy_cache my_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 60m;
            proxy_cache_valid 404 1m;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Add cache status to response headers
            add_header X-Cache-Status $upstream_cache_status;
        }

        location /health {
            access_log off;
            return 200 'healthy\n';
        }
    }
}